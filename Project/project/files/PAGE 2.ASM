.MODEL SMALL
.STACK 100H

.DATA


	ROW_NO DW 0
	COL_NO DW 0
	
	BALLARRAY   DB  11,  11,  11, 11, 11, 11, 11,  11
				DB  11,  11,   1,  1,  1, 11, 11,  11
				DB  11,   1,   1,  1,  1,  1, 11,  11
				DB  11,   1,   1,  1,  1,  1, 11,  11
				DB  11,   1,   1,  1,  1,  1, 11,  11
				DB  11,  11,   1,  1,  1, 11, 11,  11
				DB  11,  11,  11, 11, 11, 11, 11,  11
				DB  11,  11,  11, 11, 11, 11, 11,  11

	;BALL
DIM_X_BALL DW 8
DIM_Y_BALL DW 8

	Xcord dw 100
	Ycord dw  35
	STARTGAME   DB "START GAME",'$'
	INSTRUCTION DB "INSTRUCTION$"
	SCOREBOARD  DB "SCORE BOARD$"
	ESCC		DB "ESC->EXIT$"

.CODE


	MOV AX,@DATA
	MOV DS,AX
	MOV AX,0

JMP NEW
	
	BACKGROUND_COLOR PROC

	MOV AH,06H   ;BACKGROUND COLOR
	MOV AL,0
	MOV CX,0
	MOV DX,6200
	MOV BH,00 ; COLOR 
	INT 10H
	RET
	
	BACKGROUND_COLOR ENDP
	
	MAKEBOXES MACRO XSTART, YSTART, XEND, YEND, COLOUR
	
	MOV CX, XSTART
	.WHILE CX < XEND
		MOV DX, YSTART
		.WHILE DX < YEND
			MOV AH, 0CH
			MOV AL, COLOUR
			INT 10H
			INC DX
		.ENDW
		INC CX
	.ENDW
ENDM

;MACROS
DRAWPIXEL MACRO ROW, COL, COLOR

	MOV AH, 0CH
	MOV AL, COLOR
	MOV CX, COL
	MOV DX, ROW			
	INT 10H
	
ENDM
   
DRAWOBJECT MACRO YCOORD, XCOORD, LENY, LENX, ARRAY
	PUSH AX
	MOV AX, YCOORD 
	MOV ROW_NO, AX
	POP AX
	MOV CX, LENY 
	MOV SI, 0
	.REPEAT
		PUSH CX
		MOV CX, LENX
		PUSH AX
		MOV AX, XCOORD
		MOV COL_NO, AX
		POP AX
		MOV BX, 0
		.REPEAT
			PUSH CX
			CMP ARRAY[SI+ BX],0
			DRAWPIXEL ROW_NO, COL_NO, ARRAY[SI+ BX]
			INC COL_NO
			INC BX
			POP CX
			DEC CX
		.UNTIL (CX==0)
		ADD SI, LENX
		INC ROW_NO
		POP CX
		DEC CX
	.UNTIL (CX==0)
ENDM


;WRAPPER MACRO FOR DRAWING HEART
DRAWBALL MACRO YCOORD,XCOORD
	DRAWOBJECT YCOORD,XCOORD,DIM_X_BALL,DIM_Y_BALL,BALLARRAY
ENDM





; --------- Macros --------
PrintPixel Macro Colour, X, Y
	mov ah, 0ch
	mov al, Colour ;colour
	mov cx,X ; x axis
	mov dx,Y ; yaxis
	int 10h
	.IF ( Y > 30 && Y < 60 )
		MAKEBOXES 63,30,250,60,1
		CALL PRINT
		MAKEBOXES  131, 55, 180, 59, 2 ; PADDLE
		DRAWBALL  50, 151 ; BALL 
	.ELSE
		MAKEBOXES 63,30,250,60,11
		CALL PRINT
		MAKEBOXES  131, 55, 180, 59, 1 ; PADDLE
		DRAWBALL  50, 151 ; BALL 
		
	.ENDIF
	
	.IF ( Y > 62 && Y < 92 )
		MAKEBOXES 63,62,250,92,1
		CALL PRINT
		MAKEBOXES  131, 87, 180, 91, 2; PADDLE
		DRAWBALL  82, 151 ; BALL 
	.ELSE
		MAKEBOXES 63,62,250,92,11
		CALL PRINT
		MAKEBOXES  131, 87, 180, 91, 1 ; PADDLE
		DRAWBALL  82, 151 ; BALL 
	.ENDIF
	
	.IF ( Y > 94 && Y < 124 )
		MAKEBOXES 63,94,250,124,1
		MAKEBOXES  131, 119, 180, 123, 2 ; PADDLE
		DRAWBALL  114, 151 ; BALL 
		CALL PRINT
	.ELSE
		MAKEBOXES 63,94,250,124,11
		CALL PRINT
		MAKEBOXES  131, 119, 180, 123, 1 ; PADDLE
		DRAWBALL  114, 151 ; BALL 
	.ENDIF
	
	.IF ( Y > 126 && Y < 156 )
		MAKEBOXES 63,126,250,156,1
		CALL PRINT
		MAKEBOXES 131, 151, 180, 155, 2 ; PADDLE
		DRAWBALL  146, 151 ; BALL 
	.ELSE
		MAKEBOXES 63,126,250,156,11
		CALL PRINT
		MAKEBOXES 131, 151, 180, 155, 1 ; PADDLE
		DRAWBALL  146, 151 ; BALL 
	.ENDIF
	
endm
 



NEW::

	MOV AH, 0H ; SETING VIDEO MODE 
	MOV AL, 13H ; 640 X 480- X 16 VGA
	INT 10H
	CALL BACKGROUND_COLOR


	MAKEBOXES 63,30,250,60,1
	MAKEBOXES 63,62,250,92,11
	MAKEBOXES 63,94,250,124,11
	MAKEBOXES 63,126,250,156,11
	
	MAKEBOXES  131, 55, 180, 59, 2 ; PADDLE
	DRAWBALL  50, 151 ; BALL 
	
	MAKEBOXES  131, 87, 180, 91, 1 ; PADDLE
	DRAWBALL  82, 151 ; BALL 
	
	MAKEBOXES  131, 119, 180, 123, 1 ; PADDLE
	DRAWBALL  114, 151 ; BALL 
	
	MAKEBOXES 131, 151, 180, 155, 1 ; PADDLE
	DRAWBALL  146, 151 ; BALL 
	call print
		
	GetInput:	
	mov ah,01h
	int 16h
	jnz KeyPress
	jmp GetInput
	
	KeyPress:
		mov ah,00h
		int 16h
		
		.IF(AH == 1CH) 
			.IF (YCORD < 60 && YCORD > 30 )
			JMP ENTERS
			.ENDIF
		.ENDIF
		
		.IF(AH == 1CH) 
			.IF (YCORD < 92 && YCORD > 62 )
			JMP ENTERS1
			.ENDIF
		.ENDIF
		
		.IF(AH == 1CH) 
			.IF (YCORD < 124 && YCORD > 94 )
				JMP ENTERS
			.ENDIF
		.ENDIF
		
		.IF(AH == 1CH) 
			.IF (YCORD < 156 && YCORD > 126 )
				JMP ENTERS1
			.ENDIF
		.ENDIF
		
		cmp ah, 48h
		je UP
		
		
		cmp ah, 50h
		je Down
		
		cmp al, 27h
		jmp Exit
		
		ENTERS::
			MAKEBOXES 40,50,50,55,14
		JMP NEXT
		ENTERS1::
			MAKEBOXES 30,40,50,55,6
		JMP NEXT
		
		Up:
			PrintPixel 0,Xcord,Ycord
			.IF (YCORD > 35)
				sub Ycord, 35
			.ENDIF
			PrintPixel 6,Xcord,Ycord
			jmp Next
		
		Down:
			PrintPixel 0,Xcord,Ycord
			.IF (YCORD < 140	)
				add Ycord, 35
			.ENDIF
			PrintPixel 6,Xcord,Ycord
			jmp Next
	Next:
	jmp GetInput
	
	
	print proc
		MOV AH ,02H
		MOV BX, 0
		MOV DH ,5; MOVEMENT UP AND DOWN OF STRING PRINTING
		MOV DL ,15 ; LEFT AND RIGHT PRINTING 
		INT 10H
		LEA DX,STARTGAME
		MOV AH,9H
		INT 21H
		MOV AX, 0
		MOV BX, 0
		MOV CX, 0
		MOV DX, 0
		MOV AH ,02H
		MOV BX, 0
		MOV DH ,9; MOVEMENT UP AND DOWN OF STRING PRINTING
		MOV DL ,15 ; LEFT AND RIGHT PRINTING 
		INT 10H
		LEA DX,INSTRUCTION
		MOV AH,9H
		INT 21H
		MOV AX, 0
		MOV BX, 0
		MOV CX, 0
		MOV DX, 0
		MOV AH ,02H
		MOV BX, 0
		MOV DH ,13; MOVEMENT UP AND DOWN OF STRING PRINTING
		MOV DL ,15 ; LEFT AND RIGHT PRINTING 
		INT 10H
		LEA DX, SCOREBOARD
		MOV AH,9H
		INT 21H
		MOV AX, 0
		MOV BX, 0
		MOV CX, 0
		MOV DX, 0
		MOV AH ,02H
		MOV BX, 0
		MOV DH ,17; MOVEMENT UP AND DOWN OF STRING PRINTING
		MOV DL ,15	 ; LEFT AND RIGHT PRINTING 
		INT 10H
		LEA DX, ESCC
		MOV AH,9H
		INT 21H
		ret
	print endp

EXIT::
	MOV AH, 04CH
	INT 21H
	END
	

